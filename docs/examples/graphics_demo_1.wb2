10  LET PLAYER_ROTATE_SPEED = 0.25
20  LET PI = 3.1415926
30  LET PLAYER_MOVE_SPEED = 0.05
40  LET PLAYER_POSITION_Z = 2.5
50  LET SCENE_RADIUS_IN_SQUARE = 5 * 5
60
70  FOG(1)
80  FOG_COLOR(0, 0, 0)
90  FOG_DEPTH(5)
100
110 DIM filename = "data/plateau.ao"
120 LOAD_OBJECT(filename)
130
140 LET screen_center_x = SCREEN_WIDTH() / 2
150 LET screen_center_y = SCREEN_HEIGHT() / 2
160 LET camera_angle_x = 0
170 LET camera_angle_z = 0
180 LET camera_position_x = 0
190 LET camera_position_y = 0
200
210 REM Main loop:
220 IF KEYSTATE(1) = 1 THEN 730
230     REM Camera rotation:
240     LET cursor_position_x = MOUSEX()
250     LET cursor_position_y = MOUSEY()
260     POSITION_MOUSE(screen_center_x, screen_center_y)
270
280     LET camera_angle_x = camera_angle_x + PLAYER_ROTATE_SPEED * (cursor_position_y - screen_center_y)
290     IF camera_angle_x < 90 THEN 310
300         LET camera_angle_x = 90
310     IF camera_angle_x > 0 - 90 THEN 330
320         LET camera_angle_x = 0 - 90
330     LET camera_angle_z = camera_angle_z + PLAYER_ROTATE_SPEED * (cursor_position_x - screen_center_x)
340
350     ROTATION_CAMERA(camera_angle_x, 0, camera_angle_z)
360
370     REM Camera move:
380     LET direction_x = 0
390     LET direction_y = 0
400     IF KEYSTATE(63) = 0 THEN 440
410         LET direction_x = direction_x + COS((camera_angle_z - 90) * PI / 180)
420         LET direction_y = direction_y + SIN((camera_angle_z - 90) * PI / 180)
430         GOTO 470
440     IF KEYSTATE(59) = 0 THEN 470
450         LET direction_x = direction_x - COS((camera_angle_z - 90) * PI / 180)
460         LET direction_y = direction_y - SIN((camera_angle_z - 90) * PI / 180)
470     IF KEYSTATE(41) = 0 THEN 510
480         LET direction_x = direction_x - COS(camera_angle_z * PI / 180)
490         LET direction_y = direction_y - SIN(camera_angle_z * PI / 180)
500         GOTO 540
510     IF KEYSTATE(44) = 0 THEN 540
520         LET direction_x = direction_x + COS(camera_angle_z * PI / 180)
530         LET direction_y = direction_y + SIN(camera_angle_z * PI / 180)
540     LET direction_length = SQR(direction_x * direction_x + direction_y * direction_y)
550     IF direction_length = 0 THEN 590
560         LET direction_x = direction_x / direction_length
570         LET direction_y = direction_y / direction_length
580
590     LET new_camera_position_x = camera_position_x + PLAYER_MOVE_SPEED * direction_x
600     LET new_camera_position_y = camera_position_y + PLAYER_MOVE_SPEED * direction_y
610     IF new_camera_position_x * new_camera_position_x + camera_position_y * camera_position_y < SCENE_RADIUS_IN_SQUARE THEN 630
620         LET new_camera_position_x = camera_position_x
630     IF camera_position_x * camera_position_x + new_camera_position_y * new_camera_position_y < SCENE_RADIUS_IN_SQUARE THEN 650
640         LET new_camera_position_y = camera_position_y
650     LET camera_position_x = new_camera_position_x
660     LET camera_position_y = new_camera_position_y
670
680     POSITION_CAMERA(camera_position_x, camera_position_y, PLAYER_POSITION_Z)
690
700     SYNC()
710     GOTO 210
720
730 REM Dummy line:
740 RND()
